{"remainingRequest":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\babel-loader\\lib\\index.js!F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\src\\components\\page\\Account.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\src\\components\\page\\Account.vue","mtime":1703621046196},{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\babel.config.js","mtime":1703497341486},{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703497603234},{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\babel-loader\\lib\\index.js","mtime":1703497598079},{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703497603234},{"path":"F:\\ProgrammeTraining\\vue\\vue-manage-system-4.2.0\\vue-HQstudySystem\\node_modules\\vue-loader\\lib\\index.js","mtime":1703497601623}],"contextDependencies":[],"result":["export default {\n  data: function data() {\n    var _this = this;\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this.ruleForm.checkPass !== '') {\n          _this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '123456',\n        checkPass: '123456',\n        userId: '2237101',\n        // 假定的用户 ID\n        avatar: '',\n        // 用户头像 URL\n        username: localStorage.getItem('ms_username'),\n        // 用户名\n        email: 'childking0909@gmail.com',\n        // 电子邮件\n        phone: '15048889999' // 手机号\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          alert('提交成功!');\n        } else {\n          console.log('表单验证失败');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"names":["data","_this","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","pass","userId","avatar","username","localStorage","getItem","email","phone","rules","required","message","trigger","validator","methods","submitForm","formName","validate","valid","alert","console","log","resetForm","resetFields"],"sources":["src/components/page/Account.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n\r\n            <el-form-item label=\"用户名\" prop=\"username\" :show-required=\"false\">\r\n                <el-input v-model=\"ruleForm.username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"pass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"电子邮件\">\r\n                <el-input v-model=\"ruleForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"手机号\">\r\n                <el-input v-model=\"ruleForm.phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户 ID\">\r\n                <el-input :placeholder=\"ruleForm.userId\" v-model=\"input\" :disabled=\"true\">\r\n                </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户头像\">\r\n                <el-upload class=\"upload-demo\" drag action=\"http://jsonplaceholder.typicode.com/api/posts/\" multiple>\r\n                    <i class=\"el-icon-upload\"></i>\r\n                    <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                    <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n                </el-upload>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                <el-button>取消</el-button>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    data() {\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.ruleForm.pass) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            ruleForm: {\r\n                pass: '123456',\r\n                checkPass: '123456',\r\n                userId: '2237101', // 假定的用户 ID\r\n                avatar: '', // 用户头像 URL\r\n                username: localStorage.getItem('ms_username'), // 用户名\r\n                email: 'childking0909@gmail.com', // 电子邮件\r\n                phone: '15048889999', // 手机号\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n            ],\r\n                pass: [\r\n                        { validator: validatePass, trigger: 'blur' }\r\n                    ],\r\n                    checkPass: [\r\n                        { validator: validatePass2, trigger: 'blur' }\r\n                    ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    alert('提交成功!');\r\n                } else {\r\n                    console.log('表单验证失败');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n  \r\n   \r\n<style>\r\n.form-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 50px;\r\n    max-width: 800px;\r\n    /* 或您想要的任何宽度 */\r\n    margin: 0 auto;\r\n    /* 水平居中 */\r\n    padding: 20px;\r\n    /* 可选，为了有一些内边距 */\r\n}\r\n.form-item {\r\n    width: 50%;\r\n    /* 设置表单项的宽度 */\r\n    margin: auto;\r\n    /* 使表单项居中 */\r\n}\r\n\r\n.input-short {\r\n    width: 100%;\r\n    /* 设置输入框的宽度 */\r\n}\r\n</style>\r\n\r\n  "],"mappings":"AAyCA;EACAA,IAAA,WAAAA,KAAA;IAAA,IAAAC,KAAA;IACA,IAAAC,YAAA,YAAAA,aAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,IAAAL,KAAA,CAAAM,QAAA,CAAAC,SAAA;UACAP,KAAA,CAAAQ,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,YAAAA,cAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,KAAAH,KAAA,CAAAM,QAAA,CAAAK,IAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,QAAA;QACAK,IAAA;QACAJ,SAAA;QACAK,MAAA;QAAA;QACAC,MAAA;QAAA;QACAC,QAAA,EAAAC,YAAA,CAAAC,OAAA;QAAA;QACAC,KAAA;QAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAL,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,IAAA,GACA;UAAAY,SAAA,EAAAtB,YAAA;UAAAqB,OAAA;QAAA,EACA;QACAf,SAAA,GACA;UAAAgB,SAAA,EAAAb,aAAA;UAAAY,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,UAAA,WAAAA,WAAAC,QAAA;MACA,KAAAlB,KAAA,CAAAkB,QAAA,EAAAC,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,SAAA,WAAAA,UAAAN,QAAA;MACA,KAAAlB,KAAA,CAAAkB,QAAA,EAAAO,WAAA;IACA;EACA;AAEA"}]}